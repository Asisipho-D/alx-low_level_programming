#include <stdio.h>

/**
 * binary_search - Search for a value in a sorted array using binary search
 * @array: Pointer to the first element of the array
 * @size: Size of the array
 * @value: Value to search for
 *
 * Return: Index of the value if found, otherwise -1
 */
int binary_search(int *array, size_t size, int value)
{
    int left = 0;
    int right = size - 1;

    while (left <= right)
    {
        int mid = left + (right - left) / 2;

        // Check if value is present at mid
        if (array[mid] == value)
            return mid;

        // If value is greater, ignore left half
        if (array[mid] < value)
            left = mid + 1;
        // If value is smaller, ignore right half
        else
            right = mid - 1;
    }

    // Value not present in array
    return -1;
}

/**
 * main - Entry point
 *
 * Return: Always 0
 */
int main(void)
{
    int array[] = {10, 20, 30, 40, 50};
    int size = sizeof(array) / sizeof(array[0]);
    int value = 30;
    int index = binary_search(array, size, value);

    if (index != -1)
        printf("Value %d found at index %d\n", value, index);
    else
        printf("Value %d not found\n", value);

    return (0);
}
