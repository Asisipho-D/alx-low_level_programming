#include <stdio.h>
#include <stdlib.h>

/*
* main - Entry point of the program
*
* This function serves as the entry point of the program. It demonstrate the usage of the allocate_map function to allocate memory for a 2D array
* initialize its values, and print its contents.
* @n: Number of rows
* @m: Number of columns
*
* Return: Pointer to the allocated 2D array
*/
int **allocate_map(int n, int m)
{
    int **map;
    int i;

    // Allocate memory for the array of pointers (rows)
    map = malloc(sizeof(int *) * n);
    if (map == NULL)
    {
        perror("malloc");
        exit(EXIT_FAILURE);
    }

    // Allocate memory for each row (array of integers)
    for (i = 0; i < n; i++)
    {
        map[i] = malloc(sizeof(int) * m);
        if (map[i] == NULL)
        {
            perror("malloc");
            exit(EXIT_FAILURE);
        }
    }

    return map;
}

int main(void)
{
    int **arr;
    int n = 3;
    int m = 4;
    int i, j;

    arr = allocate_map(n, m);

    // Initialize values
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < m; j++)
        {
            arr[i][j] = i + j;
        }
    }

    // Print the 2D array
    printf("2D Array:\n");
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < m; j++)
        {
            printf("%d ", arr[i][j]);
        }
        printf("\n");
    }

    // Free memory
    for (i = 0; i < n; i++)
    {
        free(arr[i]);
    }
    free(arr);

    return 0;
}
