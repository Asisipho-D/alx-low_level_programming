#include <stdio.h>
#include <math.h>

/**
 * jump_search - Searches for a value in a sorted array using jump search algorithm
 * @array: Pointer to the first element of the array
 * @size: Size of the array
 * @value: Value to search for
 *
 * Return: Index of the value if found, otherwise -1
 */
int jump_search(int *array, size_t size, int value)
{
    int step = sqrt(size); // Calculate the jump step
    int prev = 0;

    // Jumping forward through blocks
    while (array[prev] < value && prev < (int)size)
    {
        int curr = prev + step;
        if (curr >= (int)size)
            curr = size - 1;

        if (array[curr] >= value)
            break;

        prev += step;
    }

    // Performing linear search in the current block
    int i;
    for (i = prev; i < (int)size; i++)
    {
        if (array[i] == value)
            return i;
    }

    return -1; // Value not found
}

/**
 * main - Entry point
 *
 * Return: Always 0
 */
int main(void)
{
    int array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    size_t size = sizeof(array) / sizeof(array[0]);
    int value = 5;
    int index = jump_search(array, size, value);

    if (index != -1)
        printf("Value %d found at index %d\n", value, index);
    else
        printf("Value %d not found\n", value);

    return 0;
}
